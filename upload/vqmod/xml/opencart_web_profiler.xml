<?xml version="1.0" encoding="UTF-8"?>
<modification>
	<id>OpenCart Web Profiler</id>
	<version>1</version>
	<vqmver>2.5.1</vqmver>
	<author>David Teal - Welford Media</author>
    <!-- Start WebProfiler -->
    <file name="system/startup.php">
		<operation>
			<search position="after"><![CDATA[<?php]]></search>
			<add><![CDATA[
                //Only run WebProfiler on dev machines on the front end
                if (strpos(HTTP_SERVER, 'welfordlocal') !== false && strpos(HTTP_SERVER, '/admin/') === false) {
                    require_once(VQMod::modCheck(DIR_SYSTEM . 'library/web_profiler.php'));

                    $_wp = new WebProfiler();
                }
            ]]></add>
		</operation>
	</file>
    <!-- Finish WebProfiler -->
	<file name="system/library/response.php">
		<operation>
			<search position="before"><![CDATA[echo $output;]]></search>
			<add><![CDATA[
                global $_wp;

                if ($_wp) {
                    $_wp->finish();
                    $_wp->log();

                    $output = str_replace('</html>', $_wp->template() . '</html>', $output);
                }
            ]]></add>
		</operation>
	</file>
    <!-- Set registries -->
	<file name="system/engine/controller.php">
		<operation>
			<search position="after"><![CDATA[$this->registry = $registry;]]></search>
			<add><![CDATA[
                global $_wp;

                if ($_wp) {
                    $_wp->setRegistries($registry);

                    //Set default cookies; logging = off, template = on.
                    if (!isset($this->request->cookie['wplog'])) {
                        setcookie('wplog', 0, time() + (86400 * 30), '/', $this->request->server['HTTP_HOST']);
                    }

                    if (!isset($this->request->cookie['wptemplate'])) {
                        setcookie('wptemplate', 1, time() + (86400 * 30), '/', $this->request->server['HTTP_HOST']);
                    }
                }
            ]]></add>
		</operation>
	</file>
    <!-- Queries -->
	<file name="system/library/db.php">
		<operation>
			<search position="replace"><![CDATA[return $this->db->query($sql);]]></search>
			<add><![CDATA[
                global $_wp;

                if ($_wp) {
                    $start = microtime(true);
                }

                $result = $this->db->query($sql);

                if ($_wp) {
                    $_wp->addEntry('query', $sql, $start);
                }

                return $result;
            ]]></add>
		</operation>
	</file>
    <!-- Templates -->
	<file name="system/engine/loader.php">
		<operation>
			<search position="before"><![CDATA[extract($data);]]></search>
			<add><![CDATA[
                global $_wp;

                if ($_wp) {
                    $start = microtime(true);
                }
            ]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[return $output;]]></search>
			<add><![CDATA[
                if ($_wp) {
                    $_wp->addEntry('template', $template, $start);
                }
            ]]></add>
		</operation>
	</file>
    <!-- Methods -->
	<file name="system/engine/action.php">
		<operation>
			<search position="before"><![CDATA[if (is_file($this->file)) {]]></search>
			<add><![CDATA[
                global $_wp;

                if ($_wp) {
                    $start = microtime(true);
                }
            ]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[return call_user_func(array($controller, $this->method), $this->args);]]></search>
			<add><![CDATA[
                $execute = call_user_func(array($controller, $this->method), $this->args);

                if ($_wp) {
                    $_wp->addEntry('method', $this->class . '::' . $this->method, $start, $primary);
                }

                return $execute;
            ]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[public function execute($registry) {]]></search>
			<add><![CDATA[public function execute($registry, $primary = false) {]]></add>
		</operation>
	</file>
	<file name="system/engine/front.php">
		<operation>
			<search position="replace"><![CDATA[$action = $this->execute($action);]]></search>
			<add><![CDATA[$action = $this->execute($action, true);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[private function execute($action) {]]></search>
			<add><![CDATA[private function execute($action, $primary = false) {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$result = $action->execute($this->registry);]]></search>
			<add><![CDATA[$result = $action->execute($this->registry, $primary);]]></add>
		</operation>
	</file>
</modification>